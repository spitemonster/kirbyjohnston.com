.work-cards {
    margin-top: 2rem;

    & > ol,
    & > ul {
        list-style: none;
        margin: 0;
        padding: 0;

        li {
            display: block;
            padding: 0;

            // little space between work cards
            & + li {
                margin-top: 2px;
            }
        }
    }
}

.work-card {
    --offset: 2rem;
    position: relative;

    color: var(--color-foreground);
    text-decoration: none;
    z-index: 1;
    width: 100%;

    &:not([open]) {
        .tags,
        .links {
            height: 0;
            overflow: clip;
        }
    }

    summary {
        list-style: none;
        cursor: pointer;

        h4 {
            a {
                color: var(--color-accent);
                text-decoration: none;
            }
        }
    }

    summary::-webkit-details-marker {
        display: none;
    }

    ol {
        list-style: disc;

        li {
            display: list-item !important;
            &::marker {
                /* transition: color var(--transition-time) ease; */
                color: var(--color-background);
            }
        }
    }

    // elements within the work card that have this tag have their content triplicated in the before and after pseudo elements
    // these elements are used to accomplish the
    [data-content] {
        position: relative;
        display: block;
        width: 100%;
        color: transparent;

        &::before,
        &::after {
            content: attr(data-content);
            display: block;
            width: calc(100% + var(--offset) * 2);
            position: absolute;
            top: 0;
            left: calc(var(--offset) * -1);
            padding-inline: var(--offset);
            transition: clip-path var(--transition-time) ease;
        }

        &::before {
            color: var(--color-foreground);
            clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
        }

        &::after {
            color: var(--color-background);
            clip-path: polygon(0 0, 0 0, 0 100%, 0 100%);
        }
    }

    .duration,
    .roles {
        font-family: var(--font-mono);
    }

    .content {
        position: relative;
        color: inherit;
        padding-top: 2rem;
    }

    .technology {
        list-style: none;
        padding-left: 0;
        display: inline-flex;
        justify-content: flex-start;
        font-family: var(--font-mono);
        gap: 0.5rem;

        li {
            width: auto;
            flex-shrink: 0;
            flex-grow: 0;
        }
    }

    .skills {
        font-family: var(--font-mono);
    }

    .tags {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        font-family: var(--font-mono);
        list-style-position: inside;

        li {
            &::marker {
                content: '+';
            }
            position: relative;
            flex: 0;
            margin: 0;
            padding: 0;
            line-height: 1.125;
            white-space: nowrap;
            font-size: 1rem;
            color: var(--color-background);
            margin-right: 0.125rem;
            padding-right: 0.125rem;
        }
    }

    .links {
        position: relative;
        z-index: 3;
        font-size: var(--font-size-sm);

        a {
            width: auto;
            color: transparent;
            &::before {
                background: none;
            }

            &::after {
                height: auto;
            }
        }
    }

    .description {
        font-family: 'Inter', sans-serif;
    }

    .arrow {
        position: absolute;
        top: calc(var(--offset) + 1px);
        right: 0;
        width: 4rem;
        height: auto;
        aspect-ratio: 4/3;
        display: block;
        transform: rotate(180deg);
        fill: var(--color-background);
        z-index: 10;
        transition: all var(--transition-time) ease;
        background: transparent;
    }

    // reset value inherited from default a
    &::after {
        content: '';
        background: var(--color-accent);
        position: absolute;
        top: 0;
        left: calc(var(--offset) * -1);
        height: calc(var(--offset));
        aspect-ratio: 1;
        width: auto;
        clip-path: polygon(100% 0%, 0 0, 0 100%);
    }

    padding-block: var(--offset);

    // creates green background on hover
    &::before {
        content: '';
        position: absolute;

        top: 0;
        left: calc(var(--offset) * -1);
        display: block;
        height: 100%;
        width: 0;

        transition: width var(--transition-time) ease;
        background: var(--color-accent);
        z-index: -1;
    }

    &[open] {
        .arrow {
            transform: rotate(90deg);
        }
    }

    .content {
        &::before,
        &::after {
            content: '';
            position: absolute;
            top: 1rem;
            display: block;
            width: 100%;
            height: 1px;
        }

        &::before {
            background: var(--color-foreground);
        }

        &::after {
            background: var(--color-background);
        }
    }

    .links {
        &::before {
            background: transparent;
        }

        &::after {
            height: 100%;
        }
    }

    .arrow {
        position: absolute;
        top: calc(var(--offset) + 1px);
        right: 0;
    }
}

@media (min-width: 60rem) {
    .work-card {
        &:hover,
        &:focus,
        &:focus-within {
            summary {
                outline: none;
            }

            [data-content] {
                &::before {
                    clip-path: polygon(100% 0, 100% 0, 100% 100%, 100% 100%);
                }

                &::after {
                    clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);
                }
            }

            &::before {
                left: calc(var(--offset) * -1);
                width: calc(100% + var(--offset) * 2);
            }
        }
    }
}

@media (max-width: 60rem) {
    .work-card {
        .links {
            a:not([data-content]) {
                color: var(--color-accent);
            }
        }

        .arrow {
            fill: var(--color-foreground);
            top: 2.5rem;
            right: 0;
            width: 2rem;
        }

        &[open] {
            summary {
                outline: none;
            }

            .arrow {
                fill: var(--color-background);
            }

            [data-content] {
                &::before {
                    clip-path: polygon(100% 0, 100% 0, 100% 100%, 100% 100%);
                }

                &::after {
                    clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);
                }
            }

            .external svg {
                fill: var(--color-background);
            }

            &::before {
                left: calc(var(--offset) * -1);
                width: calc(100% + var(--offset) * 2);
            }
        }
    }
}
